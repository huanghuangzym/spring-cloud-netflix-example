
---
spring:
  profiles: docker
  application:
    name: service-d
  cloud:
    client:
      ipAddress: ${MY_POD_IP}
   # config:
    #  discovery:
     #   enabled: true
      #  service-id: config-server
      #fail-fast: true
      #retry:
       # initial-interval: 2000
       # max-interval: 10000
       # multiplier: 2
       # max-attempts: 10
  #rabbitmq:
    #host: rabbitmq
  sleuth:
    sampler:
      probability: 1
  zipkin:
    base-url: http://zipkin:9411/
    sender:
      type: web

server:
    port: 80

eureka-client:
  ribbon:
    #NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule

feign:
  okhttp: 
    enabled: false
  httpclient:
    enabled: true
    maxConnections: 20480
    maxConnectionsPerRoute: 512
    timeToLive: 60
    connectionTimeout: 10000
    userAgent: 'testhl'

eureka:
  instance:
    #hostname: ${REG_HOSTNAME}
    prefer-ip-address: true
    #prefer-ip-address: false
    #nonSecurePort: ${REG_PORT}
    #nonSecurePortEnabled: true
    instance-id: ${spring.cloud.client.ipAddress}:${spring.application.name}:${server.port}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone:  ${REGISTRY_URL}
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true
    health:
      show-details: ALWAYS
